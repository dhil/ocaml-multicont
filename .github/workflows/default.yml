name: Multicont build, install, & running examples suite

on:
  pull_request:
    branches: master
  push:
    branches: [master]
  schedule:
    # Prime the caches every Monday
    - cron: 0 1 * * MON

jobs:
  examples:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
        ocaml-compiler:
          - 5.0.0

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          opam-depext: false

      - name: Install dune
        run: |
          opam install dune
          eval $(opam env)
        # run: |
        #   eval $(opam env)
        #   opam pin add dune git+https://github.com/ocaml/dune.git#9c3b942
        shell: bash

      - name: Install library
        run: |
          eval $(opam env)
          opam install ./multicont.opam
        shell: bash

      - name: Build examples
        run: |
          eval $(opam env)
          cd examples
          dune build
        shell: bash

      - name: Run native examples
        run: |
          eval $(opam env)
          cd examples
          test `dune exec ./nqueens.exe` -eq 92
          test `dune exec ./generic_count.exe` -eq 128
        shell: bash

      - name: Run byte code examples
        run: |
          eval $(opam env)
          cd examples
          test `dune exec ./nqueens.bc.exe` -eq 92
          test `dune exec ./generic_count.bc.exe` -eq 128
        shell: bash
